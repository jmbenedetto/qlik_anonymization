//#########################################################################################//
/* -------------------------------------------------------------------

    Name : Anon_FakeGenericDimension
    
----------------------------------------------------------------------
 	Original Rule :	Replace Generic Master Data , from Inline possibles
 	Params :
    	1 - Delete Original Field (Y/N)
		2 - Table Name
        3 - Field Name
        4 - Inline Table Name
        
 
-------------------------------------------------------------------*/

let vInlineTable = 'INLINE_PERSON_NAME'; //--> DO NOT DELETE THIS LINE, just to not fail on the first execution

SUB Anon_FakeGenericDimension (P_DELETE_ORIGINAL_FIELD , P_TABLENAME , P_FIELDNAME , P_INLINETABLE)

	
TRACE ####################################################;
TRACE ## Starting Function : Anon_FakeGenericDimension  ##;
TRACE ## Dimension : $(P_INLINETABLE) #;
TRACE ## Anonymizing Field : $(P_FIELDNAME) #;
TRACE ####################################################;

    
    
    //---------------------------------------//
    //-- Fake Name Table dynamic auto rows --//
    
    TempDistinct:
    Load Distinct [$(P_FIELDNAME)] Resident [$(P_TABLENAME)] where not IsNull([$(P_FIELDNAME)]);
    
    Let vTotalLines = NoOfRows('TempDistinct');
    
    TRACE # Total Distinct Dimension Values : $(vTotalLines) #;
    
    //-------------------------------------------------------------------//
    //-- Including External QVS with ALL current and future Inlines

    LET vInlineTable = '$(P_INLINETABLE)'; //--> not working with the default param
    	
    	$(must_include=[lib://:DataFiles/$(vInlineTable).qvs]); //must include the INLINE table and delete later
        
    Join ($(P_INLINETABLE))

    Load 
    	RowNo() as Multiply
    Autogenerate ceil($(vTotalLines)/NoOfRows('$(P_INLINETABLE)'));   //--> Multiply by exatcly amount of rows
    
    //-------------------------------------------------------------------//
    //-- Mapping table with True Name + Fake Name (ensure that the same true name will always be given the same fake name)
    
        NoConcatenate

        MappingTMP:
        Load RowNo() 					 as Line,
        	 [$(P_FIELDNAME)]			 as True
        Resident TempDistinct;
        
        Left Join (MappingTMP)
        
        LOAD RowNo() 					 			as Line,
             Field & ' - ' & Multiply  				as Fake
        Resident [$(P_INLINETABLE)];  
        
        Drop table TempDistinct;
        Drop table [$(P_INLINETABLE)];
        
    //-------------------------------------------------------------------//
    
    // -- Final Fake Dimension Table with the exactly amount of lines , based on the selected INLINE map -- //
    // -- Important : FOR KEYS , will work fine because applymap will use the first value occurrence and the applymap will be the same name (map auto concatenate)
    
        [Map_$(P_FIELDNAME)]:  
        Mapping
        LOAD
            True,
            Fake
        Resident MappingTMP;

        Drop table MappingTMP;
	
    
    //-- END Fake Table --//
    //---------------------------------------//
    
	NoConcatenate
    
    
 	[Anon_$(P_TABLENAME)]:
     LOAD
     		*,
        ApplyMap('Map_$(P_FIELDNAME)',[$(P_FIELDNAME)],Null())		as [Anon.$(P_FIELDNAME)]	
        
        
    Resident [$(P_TABLENAME)];
    
    Drop table [$(P_TABLENAME)];
    
    Rename table [Anon_$(P_TABLENAME)] to [$(P_TABLENAME)];
    
    IF MixMatch(P_DELETE_ORIGINAL_FIELD,'Y') THEN
    	Drop field [$(P_FIELDNAME)] from [$(P_TABLENAME)];
    END IF;
   
    
// -- SUB END -- //    

TRACE ##################################################;
TRACE # Field anonymized successfully : $(P_FIELDNAME) #;
TRACE # With Inline table : $(P_INLINETABLE)           #;
TRACE ##################################################;

END SUB

//#########################################################################################//